{"version":3,"sources":["components/todoReact/todo.js","App.js","index.js"],"names":["Todo","useState","inputData","setInputData","dataList","localStorage","getItem","JSON","parse","getLocalStorage","items","setItems","isEditItem","setIsEditItem","toggelButton","setToggleButton","useEffect","setItem","stringify","addItem","map","curElement","id","name","myNewInputData","Date","getTime","toString","alert","className","src","alt","type","placeholder","value","onChange","event","target","class","onClick","curElem","index","item_todo_edited","find","element","editItems","updatedItem","filter","deleteItems","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2NAqIeA,EA3HF,WACX,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAVJ,WACtB,IAAMG,EAAWC,aAAaC,QAAQ,cACtC,OAAIF,EACKG,KAAKC,MAAMJ,GAEX,GAK0BK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAGAC,qBAAU,WACRX,aAAaY,QAAQ,aAAcV,KAAKW,UAAUR,MACjD,CAACA,IAEJ,IAAMS,EAAU,WACd,GAAKjB,EAEE,GAAIA,GAAaY,EACtBH,EACED,EAAMU,KAAI,SAACC,GACT,OAAIA,EAAWC,KAAOV,EACb,2BAAKS,GAAZ,IAAwBE,KAAMrB,IAEzBmB,MAGXlB,EAAa,IAEbU,EAAc,MACdE,GAAgB,OACX,CACL,IAAMS,EAAiB,CACrBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMrB,GAERS,EAAS,GAAD,mBAAKD,GAAL,CAAYc,KACpBrB,EAAa,SApBbyB,MAAM,0CAiDV,OACE,mCACE,sBAAKC,UAAU,WAAf,UACE,mCACE,qBAAKC,IAAI,yBAAyBC,IAAI,cACtC,uCACE,sBAAMF,UAAU,SAAhB,yBACA,uBAFF,iBAMF,sBAAKA,UAAU,WAAf,UACE,uBACEG,KAAK,OACLH,UAAU,eACVI,YAAY,6BACZC,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAAWjC,EAAaiC,EAAMC,OAAOH,UAEhDpB,EACC,mBAAGwB,MAAM,0BAA0BC,QAASpB,IAE5C,mBAAGmB,MAAM,sBAAsBC,QAASpB,OAG5C,qBAAKU,UAAU,YAAf,SACGnB,EAAMU,KAAI,SAACoB,EAASC,GACnB,OACE,sBAAKZ,UAAU,WAAf,UACE,6BAAKW,EAAQjB,OACb,sBAAKM,UAAU,WAAf,UACE,mBACES,MAAM,sBACNC,QAAS,kBAnDT,SAACE,GACjB,IAAMC,EAAmBhC,EAAMiC,MAAK,SAACC,GACnC,OAAQA,EAAQtB,GAAKmB,KAEvBtC,EAAauC,EAAiBnB,MAE9BV,EAAc4B,GACd1B,GAAgB,GA4Ce8B,CAAUL,EAAQlB,OAEnC,mBACEgB,MAAM,2BACNC,QAAS,kBA9DP,SAACE,GACnB,IAAMK,EAAcpC,EAAMqC,QAAO,SAACH,GAChC,QAASA,EAAQtB,KAAOmB,MAE1B9B,EAASmC,GA0DsBE,CAAYR,EAAQlB,YATVmB,QAoBrC,qBAAKZ,UAAU,YAAf,SACE,wBACEA,UAAU,eACV,oBAAkB,aAClBU,QAvDQ,WAChB,OAAO5B,EAAS,KAmDV,SAKE,wD,MC3HG,SAASsC,IACtB,OACE,qBAAKpB,UAAU,MAAf,SACE,cAAC,EAAD,MCDN,IAAMqB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACL,EAAD,MAEFC,K","file":"static/js/main.8e8f5ab9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nconst getLocalStorage = () => {\r\n  const dataList = localStorage.getItem(\"mytasklist\");\r\n  if (dataList) {\r\n    return JSON.parse(dataList);\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\nconst Todo = () => {\r\n  const [inputData, setInputData] = useState(\"\");\r\n  const [items, setItems] = useState(getLocalStorage());\r\n  const [isEditItem, setIsEditItem] = useState(\"\");\r\n  const [toggelButton, setToggleButton] = useState(false);\r\n  // const [isComplete, setIsComplete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"mytasklist\", JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  const addItem = () => {\r\n    if (!inputData) {\r\n      alert(\"Please fill the task before adding it\");\r\n    } else if (inputData && toggelButton) {\r\n      setItems(\r\n        items.map((curElement) => {\r\n          if (curElement.id === isEditItem) {\r\n            return { ...curElement, name: inputData };\r\n          }\r\n          return curElement;\r\n        })\r\n      );\r\n      setInputData(\"\");\r\n\r\n      setIsEditItem(null);\r\n      setToggleButton(false);\r\n    } else {\r\n      const myNewInputData = {\r\n        id: new Date().getTime().toString(),\r\n        name: inputData\r\n      };\r\n      setItems([...items, myNewInputData]);\r\n      setInputData(\"\");\r\n    }\r\n  };\r\n\r\n  const deleteItems = (index) => {\r\n    const updatedItem = items.filter((element) => {\r\n      return !(element.id === index);\r\n    });\r\n    setItems(updatedItem);\r\n  };\r\n\r\n  const editItems = (index) => {\r\n    const item_todo_edited = items.find((element) => {\r\n      return (element.id = index);\r\n    });\r\n    setInputData(item_todo_edited.name);\r\n\r\n    setIsEditItem(index);\r\n    setToggleButton(true);\r\n  };\r\n\r\n  // const statusUpdate = (index) => {\r\n  //   const itemUpdate = item.find((element) => {\r\n  //     return;\r\n  //   });\r\n  // };\r\n  const removeAll = () => {\r\n    return setItems([]);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"main-div\">\r\n        <figure>\r\n          <img src=\"./images/task-list.png\" alt=\"todo logo\" />\r\n          <figcaption>\r\n            <span className=\"figcap\">PAD AND PEN</span>\r\n            <br />\r\n            Todo App\r\n          </figcaption>\r\n        </figure>\r\n        <div className=\"addItems\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Pin you todo task here... \"\r\n            value={inputData}\r\n            onChange={(event) => setInputData(event.target.value)}\r\n          />\r\n          {toggelButton ? (\r\n            <i class=\"fa fa-thumbtack add-btn\" onClick={addItem}></i>\r\n          ) : (\r\n            <i class=\"far fa-edit add-btn\" onClick={addItem}></i>\r\n          )}\r\n        </div>\r\n        <div className=\"showItems\">\r\n          {items.map((curElem, index) => {\r\n            return (\r\n              <div className=\"eachItem\" key={index}>\r\n                <h3>{curElem.name}</h3>\r\n                <div className=\"todo-btn\">\r\n                  <i\r\n                    class=\"far fa-edit add-btn\"\r\n                    onClick={() => editItems(curElem.id)}\r\n                  ></i>\r\n                  <i\r\n                    class=\"far fa-trash-alt add-btn\"\r\n                    onClick={() => deleteItems(curElem.id)}\r\n                  ></i>\r\n                  {/* <i\r\n                    class=\"far fa-thumbs-up add-btn\"\r\n                    onClick={() => statusUpdate(curElem.id)}\r\n                  ></i> */}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"showItems\">\r\n          <button\r\n            className=\"btn effect04\"\r\n            data-sm-link-text=\"Remove All\"\r\n            onClick={removeAll}\r\n          >\r\n            <span>Check List</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Todo;\r\n","import Todo from \"./components/todoReact/todo\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}